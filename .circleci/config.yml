defaults: &defaults
  environment:
    GOOGLE_PROJECT_ID: planet-4-151612
  docker:
    - image: gcr.io/planet-4-151612/circleci-base:latest
  working_directory:  /home/circleci/app

version: 2

jobs:
  build:
    <<: *defaults
    steps:
      - run:
          name: Setup workspace
          command: |
            # Store current build number for future jobs
            mkdir -p /tmp/workspace/var
            echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
            # Show bash version
            bash --version
            # Show kernel information
            uname -a
            # Not all distributions will have lsb_release
            if [[ $(type -P "lsb_release") ]]
            then
              lsb_release -a
            fi
            # bats version
            bats -v
            # ack version
            ack --version
      - checkout
      - run:
          name: Update build numbers
          command: |
            # Build without arguments to update Dockerfile from template
            ./build.sh
            git config user.email "circleci-bot@greenpeace.org"
            git config user.name "CircleCI Bot"
            git config push.default simple
            git add .
            OLD_MSG=$(git log --format=%B -n1)
            git commit -m "$OLD_MSG" -m "Update build numbers [skip ci]"
            git push --force-with-lease --set-upstream origin ${CIRCLE_BRANCH}
      - setup_remote_docker
      - run:
          name: Configure gcloud
          command: |
            # Configure gcloud authentication
            ${HOME}/scripts/activate-gcloud-account.sh
      - run:
          name: Sending build request to Google Container Builder
          command: |
            # Perform the build on GCP
            ./build.sh -r
      - run:
          name: Pull and store new image in workspace
          command: |
            # Store new image for future reference
            docker pull gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM}
            docker save --output /tmp/workspace/image/circleci-base.tar gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - image
            - var


  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Setup test results
          command: |
            mkdir -p /tmp/test-results
      - run:
          name: Restore container image
          command: |
            export CIRCLE_BUILD_NUM=$(cat /tmp/workspace/var/circle-build-num)
            docker load --input /tmp/workspace/image/circleci-base.tar
      - run:
          name: Test PHP
          command: |
            export CIRCLE_BUILD_NUM=$(cat /tmp/workspace/var/circle-build-num)
            docker run --rm gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM} php -v > /tmp/test-results/php_version.txt
            grep -q 'PHP 7' /tmp/test-results/php_version.txt && echo "PHP 7 installed"
            cat /tmp/test-results/php_version.txt
      - run:
          name: Test gcloud
          command: |
            export CIRCLE_BUILD_NUM=$(cat /tmp/workspace/var/circle-build-num)
            docker run --rm gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM} ${HOME}/google-cloud-sdk/bin/gcloud -v > /tmp/test-results/gcloud_version.txt
            grep -q 'kubectl' /tmp/test-results/gcloud_version.txt && echo "Kubectl installed"
            cat /tmp/test-results/gcloud_version.txt
      - store_test_results:
          path: /tmp/test-results

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure gcloud
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - setup_remote_docker
      - run:
          name: Restore container image
          command: |
            export CIRCLE_BUILD_NUM=$(cat /tmp/workspace/var/circle-build-num)
            docker load --input /tmp/workspace/image/circleci-base.tar
      - deploy:
          name: Tag new build and push to gcr.io
          command: |
            export CIRCLE_BUILD_NUM=$(cat /tmp/workspace/var/circle-build-num)
            docker tag gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM} gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:${CIRCLE_TAG}
            docker push gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:${CIRCLE_TAG}
            # If the branch is 'master', also tag image with 'latest' and push
            if [[ "${CIRCLE_BRANCH}" = "master" ]]
            then
              docker tag gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM} gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:latest
              docker push gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:latest
            fi

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /.*/
