defaults: &defaults
  environment:
    GOOGLE_PROJECT_ID: planet-4-151612
  docker:
    - image: gcr.io/planet-4-151612/circleci-base:develop
  working_directory:  /home/circleci/app

version: 2

jobs:
  build:
    <<: *defaults
    steps:
      - setup_remote_docker

      - run:
          name: Versions
          command: |
            docker version
            docker-compose version

            # Show bash version
            bash --version

            # Show kernel information
            uname -a

            # Not all distributions will have lsb_release
            if [[ $(type -P "lsb_release") ]]
            then
              lsb_release -a
            fi

            # bats version
            bats -v

            # ack version
            ack --version

            # nodejs version
            nodejs --version

      - checkout

      - run:
          name: Initialise workspace
          command: |
            # Ensure all shell scripts are executable
            chmod +x ./bin/*.sh

            # Store current build number for future jobs
            mkdir -p /tmp/workspace/var
            echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num

      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
            gcloud auth configure-docker

      - run:
          name: Build on Google Container Builder
          command: |
            # Perform the build on GCP
            if make build
            then
              ${HOME}/scripts/notify-job-success.sh
            else
              ${HOME}/scripts/notify-job-failure.sh
              exit 1
            fi

      - deploy:
          name: Commit updated build numbers
          command: |
            ${HOME}/scripts/update-build-numbers.sh

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var


  test:
    <<: *defaults
    steps:

      - attach_workspace:
          at: /tmp/workspace

      - setup_remote_docker

      - run:
          name: Setup test results
          command: |
            mkdir -p /tmp/test-results

      - run:
          name: Pull new image
          command: |
            export CIRCLE_BUILD_NUM=$(cat /tmp/workspace/var/circle-build-num)
            docker pull gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM}

      - run:
          name: Test PHP
          command: |
            export CIRCLE_BUILD_NUM=$(cat /tmp/workspace/var/circle-build-num)
            docker run --rm gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM} php -v > /tmp/test-results/php_version.txt
            docker run --rm gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM} php -r "phpinfo();" > /tmp/test-results/php_info.txt
            grep -q 'PHP 7' /tmp/test-results/php_version.txt

      - run:
          name: Test Composer
          command: |
            export CIRCLE_BUILD_NUM=$(cat /tmp/workspace/var/circle-build-num)
            docker run --rm gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM} composer --version > /tmp/test-results/composer_version.txt
            grep -q 'Composer version' /tmp/test-results/composer_version.txt

      - run:
          name: Test gcloud
          command: |
            export CIRCLE_BUILD_NUM=$(cat /tmp/workspace/var/circle-build-num)
            docker run --rm gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM} gcloud -v > /tmp/test-results/gcloud_version.txt
            grep -q 'kubectl' /tmp/test-results/gcloud_version.txt
            cat /tmp/test-results/gcloud_version.txt
            gcloud config set project ${GOOGLE_PROJECT_ID}
            gcloud config list

      - store_test_results:
          path: /tmp/test-results


  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace

      - setup_remote_docker

      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
            gcloud auth configure-docker

      - deploy:
          name: Deploy latest tag on master branch
          command: |
            # FIXME Hacky workaround for CircleCI checking tagged commits out with detached HEAD
            if [[ "${CIRCLE_BRANCH}" = "master" ]] ||
               [[ "$(cat /tmp/workspace/var/circle-branch-name)" = "master" ]]
            then
              export CIRCLE_BUILD_NUM=$(cat /tmp/workspace/var/circle-build-num)
              docker pull gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM}
              docker tag gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:build-${CIRCLE_BUILD_NUM} gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:latest
              TYPE="gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:latest Tagged" ${HOME}/scripts/notify-job-success.sh
              docker push gcr.io/${GOOGLE_PROJECT_ID}/circleci-base:latest
            fi


workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          context: org-global
          filters:
            tags:
              only: /.*/
      - test:
          context: org-global
          requires:
            - build
          filters:
            tags:
              only: /.*/
      # Only run deploy job for tagged releases, any branch
      - deploy:
          context: org-global
          requires:
            - test
          filters:
            tags:
              only: /v.*/
